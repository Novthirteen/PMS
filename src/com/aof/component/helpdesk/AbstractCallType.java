/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Thu Dec 02 15:54:49 CST 2004 by MyEclipse Hibernate Tool.
 */
package com.aof.component.helpdesk;

import java.io.Serializable;

/**
 * A class that represents a row in the Call_Type table. 
 * You can customize the behavior of this class by editing the class, {@link CallType()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractCallType 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.String type;

    /** The value of the simple typedesc property. */
    private java.lang.String typedesc;
    
    private java.lang.String name;
    
		/**
		 * @return Returns the name.
		 */
		public java.lang.String getName() {
			return name;
		}
		/**
		 * @param name The name to set.
		 */
		public void setName(java.lang.String name) {
			this.name = name;
		}
    /**
     * Simple constructor of AbstractCallType instances.
     */
    public AbstractCallType()
    {
    }

    /**
     * Constructor of AbstractCallType instances given a simple primary key.
     * @param type
     */
    public AbstractCallType(java.lang.String type)
    {
        this.setType(type);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.String
     */
    public java.lang.String getType()
    {
        return type;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param type
     */
    public void setType(java.lang.String type)
    {
        this.hashValue = 0;
        this.type = type;
    }

    /**
     * Return the value of the typedesc column.
     * @return java.lang.String
     */
    public java.lang.String getTypedesc()
    {
        return this.typedesc;
    }

    /**
     * Set the value of the typedesc column.
     * @param typedesc
     */
    public void setTypedesc(java.lang.String typedesc)
    {
        this.typedesc = typedesc;
    }

    /**
     * Return the value of the status_type column.
     * @return CallType
     */
  
    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof CallType))
            return false;
        CallType that = (CallType) rhs;
        if (this.getType() != null && that.getType() != null)
        {
            if (! this.getType().equals(that.getType()))
            {
                return false;
            }
        }
        return true;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int typeValue = this.getType() == null ? 0 : this.getType().hashCode();
            result = result * 37 + typeValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
